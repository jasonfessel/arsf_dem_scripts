LiDAR Tutorials
===============

Create DSM using GRASS
------------------------


Create DSM / DTM using Python Functions
-----------------------------------------

As well as the command line tool create_dem_from_lidar.py it is also possible 
to create a DSM or Digital Terrain Model (DTM) from within a Python script. 
The advantage of this is that if LAStools or SPDLib are installed 
(and a license is available for LAStools) they can be used
instead of GRASS to create an interpolated DSM or classify ground returns to create a DTM.

To create a DSM using GRASS the following is used

.. code-block:: python

   from arsf_dem import dem_lidar
   las_to_dsm('in_las.las', 'out_dsm_grass.tif', resolution=2, method='GRASS')

The format of the output file is set using the extension, using '.tif' will create a GeoTIFF.
Using '.dem' will create an ENVI file. 

If SPDLib is available, and the path has been set in the config file a DSM can be 
created using:

.. code-block:: python

   from arsf_dem import dem_lidar
   las_to_dsm('in_las.las', 'out_dsm_spdlib.tif', resolution=2, method='SDPLIB')

Similarly, if LAStools are available a DSM can be created using:

.. code-block:: python

   from arsf_dem import dem_lidar
   las_to_dsm('in_las.las', 'out_dsm_lastools.tif', resolution=2, method='LASTOOLS')

Note, if you don't have a license for LAStools, this command will still run but will introduce
artefacts, such as diagonal black lines.

You can use these Python functions to iterate through a list of files.

To create a DTM the function las_to_dtm is used. When the method is GRASS this just takes the last
return. When SPDLib or LAStools are used a progressive morphology filter is used to classify ground
returns and a DTM is generated by interpolating these points.

.. code-block:: python

   from arsf_dem import dem_lidar
   # GRASS
   las_to_dtm('in_las.las', 'out_dtm_grass.tif', resolution=2, method='GRASS')
   # SPDLib
   las_to_dtm('in_las.las', 'out_dtm_spdlib.tif', resolution=2, method='SPDLIB')
   # LAStools
   las_to_dtm('in_las.las', 'out_dtm_lastools.tif', resolution=2, method='LASTOOLS')




